plugins {
	id 'maven-publish'
	id 'io.github.juuxel.loom-quiltflower' version '1.8.+' // For loom 0.8-0.9, 0.11+
	id 'org.quiltmc.loom' version '1.1.+'
}

archivesBaseName = project.archives_base_name
version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

loom {
	accessWidenerPath = file("src/main/resources/book_of_the_dead.accesswidener")
	runs {
		datagen {
			server()

			name = "Data Generation"
			runDir = "build/datagen"

			vmArg("-Dfabric-api.datagen")
			vmArg("-Dfabric-api.datagen.output-dir=${file("src/main/generated")}")
		}
	}
}

assemble.dependsOn(runDatagen)

sourceSets {
	main {
		resources {
			srcDirs += [
					"src/main/generated"
			]
		}
	}
}

repositories {
	jcenter()
	maven {
		name = "Quilt"
		url  = "https://maven.quiltmc.org/repository/release"
	}
	maven {
		name = "Jitpack"
		url  = "https://jitpack.io"
	}
	maven {
		name = "REI"
		url = "https://maven.shedaniel.me"
	}
	maven {
		name = "Architectury"
		url  = "https://maven.architectury.dev/"
	}
	maven {
		name = "TerraformersMC"
		url  = "https://maven.terraformersmc.com/"
	}
	maven {
		name = "Modrinth"
		url  = "https://api.modrinth.com/maven"
	}
	maven {
		name = "Reach Entity Attributes"
		url  = "https://maven.jamieswhiteshirt.com/libs-release"
	}
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
	}
	maven {
		name = "CurseForge"
		url = "https://minecraft.curseforge.com/api/maven"
	}
	maven {
		name = "Curse"
		url = "https://www.cursemaven.com"
	}
	maven {
		name = "Geckolib"
		url = "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/"
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${minecraft_version}"

	mappings "org.quiltmc:quilt-mappings:${minecraft_version}+build.${quilt_mappings}:intermediary-v2"


	modImplementation "org.quiltmc:quilt-loader:${project.loader_version}"
	modImplementation "org.quiltmc:qsl:${qsl_version}+${minecraft_version}"
	modImplementation "org.quiltmc.quilted-fabric-api:quilted-fabric-api:${quilted_fabric_api_version}-${minecraft_version}"

	//CCA
	modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca}") {
		exclude group: "net.fabricmc"
		exclude group: "net.fabricmc.fabric-api"
	}
	modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca}") {
		exclude group: "net.fabricmc"
		exclude group: "net.fabricmc.fabric-api"
	}

	//Fabric ASM
	modImplementation 'com.github.Chocohead:Fabric-ASM:v2.3'
	include 'com.github.Chocohead:Fabric-ASM:v2.3'


	//REI
	modImplementation("me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}")

	//EMI
	modImplementation "dev.emi:emi:${project.emi_version}"

	//SmartLib
	modImplementation include("curse.maven:smartbrainlib-661293:${project.brain_version}")

	//Mixin Extras
	implementation("com.github.LlamaLad7:MixinExtras:${project.mixin_extras}")
	annotationProcessor("com.github.LlamaLad7:MixinExtras:${project.mixin_extras}")

	//Geckolib
	modImplementation ("software.bernie.geckolib:geckolib-quilt-${project.geckolib}")
}

processResources {
	inputs.property 'version', version

	filesMatching('quilt.mod.json') {
		expand "version": version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'
	it.options.release = 17
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	withSourcesJar()
}

jar {
	filesMatching('LICENSE') {
		rename '^(LICENSE.*?)(\\..*)?$', "\$1_${archivesBaseName}\$2"
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
	}
}
